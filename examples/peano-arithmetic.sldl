Type number {
    suc X,
    e,
}

Predicate {
    e,
    suc n: number: number -> {
        suc e,
        suc X,
    },
    eq x: number, y: number -> {
        eq e, e,
        eq suc(X), suc(X),
    },
    add x: number, y: number, z: number -> {
        add X, e, X,
        add X, suc(e), suc(X),
    },
}

Sentence {
    suc n -> n + "の後者",
    add x, y, z -> x + "と" + y + "の和は" + z,
    eq x, y -> x + "と" + y + "は等しい",
}

main {
    <add x y z>
        <add::x suc(e) />
        <add::y suc(suc(e)) />
        <add::z suc(suc(suc(e))) />
    </add>
}